webpackJsonpdsa([4],{11:function(t,n,e){t.exports='<span class="comment">#include &lt;stdio.h></span>\n<span class="comment">#include "./queue.h"</span>\n\nvoid init(Queue *q) {\n    q->head = <span class="number">0</span>;\n    q->tail = <span class="number">1</span>;\n}\n\nint isFull(Queue *q) {\n    <span class="keyword">if</span> (q->head == q->tail) {\n        <span class="keyword">return</span> <span class="number">1</span>;\n    } <span class="keyword">else</span> {\n        <span class="keyword">return</span> <span class="number">0</span>;\n    }\n}\n\nint isEmpty(Queue *q) {\n    <span class="keyword">if</span> ((q->head + <span class="number">1</span>) % N == q->tail) {\n        <span class="keyword">return</span> <span class="number">1</span>;\n    } <span class="keyword">else</span> {\n        <span class="keyword">return</span> <span class="number">0</span>;\n    }\n}\n\nvoid enque(Queue *q, int val) {\n    <span class="keyword">if</span> (isFull(q) == <span class="number">1</span>) {\n        printf(<span class="string">"queue full.\\n"</span>);\n    } <span class="keyword">else</span> {\n        q->data[q->tail] = val;\n        q->tail = (q->tail + <span class="number">1</span>) % N;\n    }\n}\n\nvoid deque(Queue *q) {\n    <span class="keyword">if</span> (isEmpty(q) == <span class="number">1</span>) {\n        printf(<span class="string">"queue empty.\\n"</span>);\n    } <span class="keyword">else</span> {\n        q->head = (q->head + <span class="number">1</span>) % N;\n    }\n}\n\nint front(Queue *q) {\n    <span class="keyword">if</span> (isEmpty(q) == <span class="number">1</span>) {\n        printf(<span class="string">"queue empty.\\n"</span>);\n        <span class="keyword">return</span> -<span class="number">1</span>;\n    } <span class="keyword">else</span> {\n        <span class="keyword">return</span> q->data[(q->head + <span class="number">1</span>) % N];\n    }\n}'},12:function(t,n,e){t.exports='<span class="comment">#define N 15</span>\n\ntypedef struct {\n    int head;\n    int tail;\n    int data[N];\n} Queue;\n\nvoid init(Queue *q);\nint isFull(Queue *q);\nint isEmpty(Queue *q);\nvoid enque(Queue *q, int val);\nvoid deque(Queue *q);\nint front(Queue *q);'},19:function(t,n,e){function r(t,n,e){1===n&&(lastStatus=p.clone()),i.push({status:lastStatus,line:t,animation:e,id:o}),o++}function a(){r(i[i.length-1].line,1)}var s=e(4),i=[],o=0,l=8,c=0,p={},u=function(t){var n,e,a,s;for(r(9),r(10,1),p.push(1,0,0),n=1;r(12,1),t>=n;++n){for(r(13),p.push(1,n,0),e=0;r(14,1),p.front(1),n-1>e;++e)r(15,1),a=p.front(),r(16,1),p.shift(),r(17,1),s=p.front(),r(18,1),p.push(a+s,n,e+1),p.last();r(20,1),p.shift(),r(21,1),p.push(1,n,n)}for(n=0;r(23,1),t+1>n;++n)r(24),a=p.front(),r(25,1),r(26),p.shift();r(28),r(29)};p.init=function(t){c=0,this.nums=[],this.tofront=[],this.yh=[]},p.last=function(){var t=this.nums.length;this.tofront.push(this.yh[this.nums[t-1].i])},p.front=function(t){return t?this.tofront=[]:this.tofront.push(this.yh[this.nums[0].i]),this.nums[0].v},p.push=function(t,n,e){this.nums.push({v:t,i:c}),this.yh.push({v:t,r:n,c:e,i:c}),c++},p.shift=function(){this.nums.shift()},p.clone=function(){return{nums:s(this.nums),tofront:s(this.tofront),yh:s(this.yh)}},lastStatus={},t.exports={getInitialDescriptions:function(){return this.initialize(),this.run("yanghui",6)},initialize:function(){return i=[],o=0,p.init(!0),lastStatus=p.clone(),this},yanghui:u,run:function(t,n){return this.initialize()[t](isNaN(parseInt(n))?0:parseInt(n)),a(),{frames:i,others:{N:l}}}}},38:function(t,n,e){var r=e(1),a=e(2);t.exports=r.createClass({displayName:"module.exports",getInitialState:function(){return{text:""}},render:function(){return r.createElement("div",{className:"list"},r.createElement("input",{onChange:this._onChange,value:this.state.text,placeholder:"整数"}),r.createElement("input",{className:"cmd-button",readOnly:!0,onClick:this._onClick.bind(this,"yanghui"),value:"计算杨辉三角"}))},_onChange:function(t){this.setState({text:t.target.value})},_onClick:function(t){a.runDemo(t,this.state.text)}})},53:function(t,n,e){t.exports="CC=gcc\nCFLAGS=-c -Wall\nLDFLAGS=\nSOURCES=main.c queue-yanghui.c ../queue/queue.c\nOBJECTS=$(SOURCES:.cpp=.o)\nEXECUTABLE=a.out\n\nall: $(SOURCES) $(EXECUTABLE)\n\n$(EXECUTABLE): $(OBJECTS)\n    $(CC) $(LDFLAGS) $(OBJECTS) -o $@\n\n.cpp.o:\n    $(CC) $(CFLAGS) $&lt; -o $@\n\nclean:\n    rm -rf *.o a.out"},54:function(t,n,e){t.exports='<span class="comment">#include &lt;stdio.h></span>\n<span class="comment">#include "../queue/queue.h"</span>\n\nvoid yanghui(n) {\n    int i;\n    int j;\n    int a;\n    int b;\n    Queue nums;\n    init(&amp;nums);\n    enque(&amp;nums, <span class="number">1</span>);\n    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; ++i) {\n        enque(&amp;nums, <span class="number">1</span>);\n        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; i-<span class="number">1</span>; ++j) {\n            a = front(&amp;nums);\n            deque(&amp;nums);\n            b = front(&amp;nums);\n            enque(&amp;nums, a+b);\n        }\n        deque(&amp;nums);\n        enque(&amp;nums, <span class="number">1</span>);\n    }\n    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n+<span class="number">1</span>; ++i) {\n        a = front(&amp;nums);\n        printf(<span class="string">"%d "</span>, a);\n        deque(&amp;nums);\n    }\n    printf(<span class="string">"\\n"</span>);\n    <span class="keyword">return</span>;\n}'},55:function(t,n,e){t.exports="void yanghui(int n);"},56:function(t,n,e){t.exports='<span class="comment">#include &lt;stdio.h></span>\n<span class="comment">#include "./queue-yanghui.h"</span>\n\nint main(int argc, char <span class="keyword">const</span> *argv[]) {\n  int n;\n  freopen(<span class="string">"in"</span>, <span class="string">"r"</span>, stdin);\n  scanf(<span class="string">"%d"</span>, &amp;n);\n  print_line(n);\n  <span class="keyword">return</span> <span class="number">0</span>;\n};'},78:function(t,n,e){function r(){var t=u.yh.map(function(t,n){return{cy:t.r*y*Math.sqrt(3),cx:(t.c-(t.r+1)/2)*y*2,v:t.v}});l.selectAll("circle").data(t).enter().append("circle").attr("r",y).attr("cx",function(t){return t.cx}).attr("cy",function(t){return t.cy}).style("fill","coral").style("opacity",0).transition().duration(f).style("opacity",1),l.selectAll("circle").data(t).style("opacity",1).transition().duration(f).style("fill",function(t,n){return u.nums.some(function(t){return t.i===n})?g:"coral"}),l.selectAll("circle").data(t).exit().style("opacity",1).transition().duration(f).style("opacity",0).remove(),c.selectAll("text").data(t).enter().append("text").attr("x",function(t){return t.cx}).attr("y",function(t){return t.cy}).attr("dy",5).text(function(t){return t.v}).style("opacity",0).transition().duration(f).style("opacity",1),c.selectAll("text").data(t).transition().duration(f).style("opacity",1),c.selectAll("text").data(t).exit().style("opacity",1).transition().duration(f).style("opacity",0).remove()}function a(){var t=u.tofront.map(function(t,n){return{cy:t.r*y*Math.sqrt(3),cx:(t.c-(t.r+1)/2)*y*2,v:t.v}});p.selectAll("circle").data(t).enter().append("circle").attr("r",y).attr("cx",function(t){return t.cx}).attr("cy",function(t){return t.cy}).style("fill","transparent").style("stroke","gray").style("stroke-width",5).style("opacity",0).transition().duration(f).style("opacity",1),p.selectAll("circle").data(t).transition().duration(f).attr("cx",function(t){return t.cx}).attr("cy",function(t){return t.cy}).style("opacity",1),p.selectAll("circle").data(t).exit().style("opacity",1).transition().duration(f).style("opacity",0).remove()}function s(t,n){u=t,f=n}function i(t,n){s(t,n),r(),a()}function o(){h=this.props.others.N;var t=this,n=d.behavior.zoom().scaleExtent([.1,10]).on("zoom",function(){t.svg.attr("transform",m().translate(d.event.translate).scale(d.event.scale))});this.svg=d.select(this.refs.svg.getDOMNode()).append("svg").call(n).append("g"),this.g=this.svg.append("g").attr("transform",m().translate(300,50).scale(1)),this.gbase=this.g.append("g").attr("class","base"),this.ghigh=this.g.append("g").attr("class","high"),this.gtext=this.g.append("g").attr("class","text"),l=this.gbase,c=this.gtext,p=this.ghigh}var l,c,p,u,f,u,f,h,d=e(3),m=e(5),y=30,g="deepskyblue";t.exports={init:o,render:i}}});