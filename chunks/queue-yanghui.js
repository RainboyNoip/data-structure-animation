webpackJsonpdsa([7],{10:function(n,t,e){n.exports='<span class="comment">#include &lt;stddef.h></span>\n<span class="comment">#include &lt;stdlib.h></span>\n<span class="comment">#include "../common/util.h"</span>\n<span class="comment">#include "./queue.h"</span>\n\nint QueueIsEmpty(queue *q) {\n  <span class="keyword">return</span> q->front != q->tail ? <span class="number">0</span> : <span class="number">1</span>;\n}\n\nint QueueIsFull(queue *q) {\n  <span class="keyword">return</span> (q->tail+<span class="number">1</span>) % q->capacity != q->front ? <span class="number">0</span> : <span class="number">1</span>;\n}\n\nvoid *QueuePop(queue *q) {\n  void *item = <span class="keyword">NULL</span>;\n  <span class="keyword">if</span> (!QueueIsEmpty(q)) {\n    item = (char *)q->items + q->front*q->item_size;\n    q->front = (q->front+<span class="number">1</span>) % q->capacity;\n  }\n  <span class="keyword">return</span> item;\n}\n\nvoid *QueuePeak(queue *q) {\n  void *item = <span class="keyword">NULL</span>;\n  <span class="keyword">if</span> (!QueueIsEmpty(q)) {\n    item = (char *)q->items + q->front*q->item_size;\n  }\n  <span class="keyword">return</span> item;\n}\n\nvoid *QueuePush(queue *q, void *x) {\n  <span class="keyword">if</span> (!QueueIsFull(q)) {\n    MemoryCopy((char *)q->items + q->tail*q->item_size, x, q->item_size);\n    q->tail = (q->tail+<span class="number">1</span>) % q->capacity;\n    <span class="keyword">return</span> x;\n  }\n  <span class="keyword">return</span> <span class="keyword">NULL</span>;\n}\n\nqueue *QueueCreate(int n, size_t item_size) {\n  n = n+<span class="number">1</span>;  <span class="comment">// 1 for front-tail</span>\n  queue *q = SafeMalloc(sizeof(queue));\n  q->capacity = n;\n  q->front = q->tail = <span class="number">0</span>;\n  q->items = SafeMalloc(item_size*n);\n  q->item_size = item_size;\n  <span class="keyword">return</span> q;\n}\n\nvoid QueueDestroy(queue *q) {\n  free(q->items);\n  free(q);\n}'},11:function(n,t,e){n.exports='<span class="comment">#ifndef QUEUE_H</span>\n<span class="comment">#define QUEUE_H</span>\n<span class="comment">#include &lt;stddef.h></span>\ntypedef struct queue {\n  int front;\n  int tail;\n  int capacity;\n  size_t item_size;\n  void *items;\n} queue;\n\nqueue *QueueCreate(int n, size_t item_size);\nvoid QueueDestroy(queue *q);\nint QueueIsEmpty(queue *q);\nint QueueIsFull(queue *q);\nvoid *QueuePop(queue *q);\nvoid *QueuePeak(queue *q);\nvoid *QueuePush(queue *q, void *x);\n\n<span class="comment">#endif</span>'},21:function(n,t,e){function s(n,t,e){1===t&&(lastStatus=p.clone()),i.push({status:lastStatus,line:n,animation:e,id:o}),o++}function a(){s(i[i.length-1].line,1)}var r=e(4),i=[],o=0,c=8,l=0,p={},u=function(n){var t,e,a,r;for(s(9),s(10,1),p.push(1,0,0),t=1;s(12,1),n>=t;++t){for(s(13),p.push(1,t,0),e=0;s(14,1),p.front(1),t-1>e;++e)s(15,1),a=p.front(),s(16,1),p.shift(),s(17,1),r=p.front(),s(18,1),p.push(a+r,t,e+1),p.last();s(20,1),p.shift(),s(21,1),p.push(1,t,t)}for(t=0;s(23,1),n+1>t;++t)s(24),a=p.front(),s(25,1),s(26),p.shift();s(28),s(29)};p.init=function(n){l=0,this.nums=[],this.tofront=[],this.yh=[]},p.last=function(){var n=this.nums.length;this.tofront.push(this.yh[this.nums[n-1].i])},p.front=function(n){return n?this.tofront=[]:this.tofront.push(this.yh[this.nums[0].i]),this.nums[0].v},p.push=function(n,t,e){this.nums.push({v:n,i:l}),this.yh.push({v:n,r:t,c:e,i:l}),l++},p.shift=function(){this.nums.shift()},p.clone=function(){return{nums:r(this.nums),tofront:r(this.tofront),yh:r(this.yh)}},lastStatus={},n.exports={getInitialDescriptions:function(){return this.initialize(),this.run("yanghui",6)},initialize:function(){return i=[],o=0,p.init(!0),lastStatus=p.clone(),this},yanghui:u,run:function(n,t){return this.initialize()[n](isNaN(parseInt(t))?0:parseInt(t)),a(),{frames:i,others:{N:c}}}}},47:function(n,t,e){var s=e(1),a=e(3),r=e(114);n.exports=s.createClass({displayName:"module.exports",getInitialState:function(){return{text:""}},componentDidMount:function(){r.init.bind(this)(),a.runDemo("yanghui",8,!1)},componentDidUpdate:function(n){this.props!==n&&void 0!==this.props.frame&&r.render(this.props.frame.status,this.props.delay,this.props.others)},render:function(){return s.createElement("div",{className:"wrapper-code"},s.createElement("div",{className:"list"},s.createElement("input",{onChange:this._onChange,value:this.state.text,placeholder:"整数"}),s.createElement("input",{className:"cmd-button",readOnly:!0,onClick:this._onClick.bind(this,"yanghui"),value:"计算杨辉三角"})),s.createElement("div",{ref:"svg",className:"scene"}))},_onChange:function(n){this.setState({text:n.target.value})},_onClick:function(n){a.runDemo(n,this.state.text)}})},74:function(n,t,e){n.exports="CC=gcc\nCFLAGS=-c -Wall\nLDFLAGS=\nSOURCES=test.c queue-yanghui.c ../queue/queue.c ../common/util.c\nOBJECTS=$(SOURCES:.c=.o)\nEXECUTABLE=a.out\n\nall: $(SOURCES) $(EXECUTABLE)\n\n$(EXECUTABLE): $(OBJECTS)\n    $(CC) $(LDFLAGS) $(OBJECTS) -o $@\n\n.cpp.o:\n    $(CC) $(CFLAGS) $&lt; -o $@\n\nclean:\n    rm -rf *.o a.out"},75:function(n,t,e){n.exports='<span class="comment">#include &lt;stdio.h></span>\n<span class="comment">#include "../queue/queue.h"</span>\n\nvoid yanghui(n) {\n    int i;\n    int j;\n    int a;\n    int one = <span class="number">1</span>;\n    queue *nums = QueueCreate(n+<span class="number">1</span>, sizeof(int));\n    QueuePush(nums, &amp;one);\n    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; ++i) {\n        QueuePush(nums, &amp;one);\n        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; i-<span class="number">1</span>; ++j) {\n            a = *(int *)QueuePeak(nums);\n            QueuePop(nums);\n            a += *(int *)QueuePeak(nums);\n            QueuePush(nums, &amp;a);\n        }\n        QueuePop(nums);\n        QueuePush(nums, &amp;one);\n    }\n    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n+<span class="number">1</span>; ++i) {\n        a = *(int *)QueuePeak(nums);\n        printf(<span class="string">"%d "</span>, a);\n        QueuePop(nums);\n    }\n    printf(<span class="string">"\\n"</span>);\n    QueueDestroy(nums);\n    <span class="keyword">return</span>;\n}'},76:function(n,t,e){n.exports="void yanghui(int n);"},77:function(n,t,e){n.exports='<span class="comment">#include &lt;stdio.h></span>\n<span class="comment">#include "./queue-yanghui.h"</span>\n\nint main(int argc, char <span class="keyword">const</span> *argv[]) {\n  int n;\n  <span class="keyword">while</span> (scanf(<span class="string">"%d"</span>, &amp;n) != EOF) {\n    yanghui(n);\n  }\n  <span class="keyword">return</span> <span class="number">0</span>;\n}'},114:function(n,t,e){function s(){var n=u.yh.map(function(n,t){return{cy:n.r*m*Math.sqrt(3),cx:(n.c-(n.r+1)/2)*m*2,v:n.v}});c.selectAll("circle").data(n).enter().append("circle").attr("r",m).attr("cx",function(n){return n.cx}).attr("cy",function(n){return n.cy}).style("fill","coral").style("opacity",0).transition().duration(d).style("opacity",1),c.selectAll("circle").data(n).style("opacity",1).transition().duration(d).style("fill",function(n,t){return u.nums.some(function(n){return n.i===t})?y:"coral"}),c.selectAll("circle").data(n).exit().style("opacity",1).transition().duration(d).style("opacity",0).remove(),l.selectAll("text").data(n).enter().append("text").attr("x",function(n){return n.cx}).attr("y",function(n){return n.cy}).attr("dy",5).text(function(n){return n.v}).style("opacity",0).transition().duration(d).style("opacity",1),l.selectAll("text").data(n).transition().duration(d).style("opacity",1),l.selectAll("text").data(n).exit().style("opacity",1).transition().duration(d).style("opacity",0).remove()}function a(){var n=u.tofront.map(function(n,t){return{cy:n.r*m*Math.sqrt(3),cx:(n.c-(n.r+1)/2)*m*2,v:n.v}});p.selectAll("circle").data(n).enter().append("circle").attr("r",m).attr("cx",function(n){return n.cx}).attr("cy",function(n){return n.cy}).style("fill","transparent").style("stroke","gray").style("stroke-width",5).style("opacity",0).transition().duration(d).style("opacity",1),p.selectAll("circle").data(n).transition().duration(d).attr("cx",function(n){return n.cx}).attr("cy",function(n){return n.cy}).style("opacity",1),p.selectAll("circle").data(n).exit().style("opacity",1).transition().duration(d).style("opacity",0).remove()}function r(n,t){u=n,d=t}function i(n,t){r(n,t),s(),a()}function o(){var n=this,t=f.behavior.zoom().scaleExtent([.1,10]).on("zoom",function(){n.svg.attr("transform",h().translate(f.event.translate).scale(f.event.scale))});this.svg=f.select(this.refs.svg.getDOMNode()).append("svg").call(t).append("g"),this.g=this.svg.append("g").attr("transform",h().translate(300,50).scale(1)),this.gbase=this.g.append("g").attr("class","base"),this.ghigh=this.g.append("g").attr("class","high"),this.gtext=this.g.append("g").attr("class","text"),c=this.gbase,l=this.gtext,p=this.ghigh}var c,l,p,u,d,u,d,f=e(2),h=e(5),m=30,y="deepskyblue";n.exports={init:o,render:i}}});