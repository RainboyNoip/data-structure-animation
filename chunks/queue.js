webpackJsonpdsa([11],{2:function(n,e,t){n.exports='<span class="comment">#include &lt;stdio.h></span>\n<span class="comment">#include &lt;stdlib.h></span>\n<span class="comment">#include &lt;string.h></span>\n<span class="comment">#include "./util.h"</span>\n\nvoid* SafeMalloc(size_t size) {\n    void* m;\n    <span class="keyword">if</span> ((m = malloc(size))) {\n        <span class="keyword">return</span> m;\n    } <span class="keyword">else</span> {\n        printf(<span class="string">"memory overflow\\n"</span>);\n        <span class="keyword">exit</span>(-<span class="number">1</span>);\n        <span class="keyword">return</span> <span class="number">0</span>;\n    }\n}\n\nvoid MemoryCopy(void *a, <span class="keyword">const</span> void *b, size_t size) {\n    <span class="comment">// size_t i;</span>\n    <span class="comment">// size_t n = size / sizeof(char);</span>\n    <span class="comment">// for (i = 0; i &lt; n; ++i) {</span>\n    <span class="comment">//     *((char *)a + i) = *((char *)b + i);</span>\n    <span class="comment">// }</span>\n    memcpy(a, b, size);\n}\n\nvoid MemorySwap(void *a, void *b, size_t size) {\n    <span class="comment">// size_t i;</span>\n    <span class="comment">// size_t n = size / sizeof(char);</span>\n    <span class="comment">// char t;</span>\n    <span class="comment">// for (i = 0; i &lt; n; ++i) {</span>\n    <span class="comment">//     t = *(char *)a;</span>\n    <span class="comment">//     *((char *)a + i) = *((char *)b + i);</span>\n    <span class="comment">//     *((char *)b + i) = t;</span>\n    <span class="comment">// }</span>\n    void *t = SafeMalloc(size);\n    memcpy(t, a, size);\n    memcpy(a, b, size);\n    memcpy(b, t, size);\n}\n\nvoid MemoryClear(void *a, size_t size) {\n    memset(a, <span class="number">0</span>, size);\n}\n\nvoid *MemoryAddress(void *a, int i, size_t size) {\n    <span class="keyword">return</span> (char *)a + i*size;\n}'},3:function(n,e,t){n.exports='<span class="comment">#ifndef UTIL_H</span>\n<span class="comment">#define UTIL_H</span>\n\n<span class="comment">#include &lt;stddef.h></span>\n\nvoid * SafeMalloc(size_t size);\nvoid MemoryCopy(void *a, <span class="keyword">const</span> void *b, size_t size);\nvoid MemorySwap(void *a, void *b, size_t size);\nvoid MemoryClear(void *a, size_t size);\n\n<span class="comment">#endif</span>'},16:function(n,e,t){n.exports='<span class="comment">#include &lt;stddef.h></span>\n<span class="comment">#include &lt;stdlib.h></span>\n<span class="comment">#include "../common/util.h"</span>\n<span class="comment">#include "./queue.h"</span>\n\nint QueueIsEmpty(queue *q) {\n  <span class="keyword">return</span> q->front != q->tail ? <span class="number">0</span> : <span class="number">1</span>;\n}\n\nint QueueIsFull(queue *q) {\n  <span class="keyword">return</span> (q->tail+<span class="number">1</span>) % q->capacity != q->front ? <span class="number">0</span> : <span class="number">1</span>;\n}\n\nvoid *QueuePop(queue *q) {\n  void *item = <span class="keyword">NULL</span>;\n  <span class="keyword">if</span> (!QueueIsEmpty(q)) {\n    item = (char *)q->items + q->front*q->item_size;\n    q->front = (q->front+<span class="number">1</span>) % q->capacity;\n  }\n  <span class="keyword">return</span> item;\n}\n\nvoid *QueuePeak(queue *q) {\n  void *item = <span class="keyword">NULL</span>;\n  <span class="keyword">if</span> (!QueueIsEmpty(q)) {\n    item = (char *)q->items + q->front*q->item_size;\n  }\n  <span class="keyword">return</span> item;\n}\n\nvoid *QueuePush(queue *q, void *x) {\n  <span class="keyword">if</span> (!QueueIsFull(q)) {\n    MemoryCopy((char *)q->items + q->tail*q->item_size, x, q->item_size);\n    q->tail = (q->tail+<span class="number">1</span>) % q->capacity;\n    <span class="keyword">return</span> x;\n  }\n  <span class="keyword">return</span> <span class="keyword">NULL</span>;\n}\n\nqueue *QueueCreate(int n, size_t item_size) {\n  n = n+<span class="number">1</span>;  <span class="comment">// 1 for front-tail</span>\n  queue *q = SafeMalloc(sizeof(queue));\n  q->capacity = n;\n  q->front = q->tail = <span class="number">0</span>;\n  q->items = SafeMalloc(item_size*n);\n  q->item_size = item_size;\n  <span class="keyword">return</span> q;\n}\n\nvoid QueueDestroy(queue *q) {\n  free(q->items);\n  free(q);\n}'},17:function(n,e,t){n.exports='<span class="comment">#ifndef QUEUE_H</span>\n<span class="comment">#define QUEUE_H</span>\n<span class="comment">#include &lt;stddef.h></span>\ntypedef struct queue {\n  int front;\n  int tail;\n  int capacity;\n  size_t item_size;\n  void *items;\n} queue;\n\nqueue *QueueCreate(int n, size_t item_size);\nvoid QueueDestroy(queue *q);\nint QueueIsEmpty(queue *q);\nint QueueIsFull(queue *q);\nvoid *QueuePop(queue *q);\nvoid *QueuePeak(queue *q);\nvoid *QueuePush(queue *q, void *x);\n\n<span class="comment">#endif</span>'},32:function(n,e,t){function a(n){currentStatus.headtail=void 0===n?0:1}function s(n){currentStatus.toque=void 0===n?[]:[n]}function r(n){currentStatus.tofront=void 0===n?[]:[n]}function i(n,e,t){1===e&&(lastStatus=l(currentStatus)),p.push({status:lastStatus,line:n,animation:t,id:u}),u++}function o(){i(p[p.length-1].line,1)}var c,l=t(8),p=[],u=0,d=8;_id=0;var m=[],h=function(){return a(1),i(7,1),0===m.length?!0:(a(),!1)},f=function(){return a(1),i(11,1),m.length===d-1?!0:(a(),!1)},y=function(){i(16,1),h()||(i(18,1),m.shift(),currentStatus.head++),i(20,1)},g=function(){return i(25,1),h()?void i(28,1):(i(26,1),c=m[0].v,r(c),c)},v=function(n){s(n),i(32,1),f()||(i(33,1),m.push({v:n,i:_id++}),s(),i(34,1),currentStatus.tail++),i(36,1)},k=function(){currentStatus.head=0,currentStatus.tail=0,m=[],currentStatus.queue=m};currentStatus={},lastStatus={},n.exports={getInitialDescriptions:function(){return this.initialize(!0),v(0),v(50),this.run("enque",100)},initialize:function(n){return p=[],u=0,n&&(m=[]),currentStatus={queue:m,tofront:[],toque:[],headtail:0,head:currentStatus.head||0,tail:currentStatus.tail||0},lastStatus=l(currentStatus),this},enque:v,deque:y,front:g,init:function(){k(),i(0)},run:function(n,e){return this.initialize()[n](e),o(),{frames:p,others:{N:d}}}}},69:function(n,e,t){var a=t(1);n.exports=a.createClass({displayName:"module.exports",render:function(){var n={display:this.props.show?"block":"none"};return a.createElement("svg",{className:"legend",width:"210",height:"100",style:n},a.createElement("rect",{className:"outline",stroke:"black",x:"0",y:"0",width:"200",height:"90"}),a.createElement("g",{transform:"translate(15,20)"},a.createElement("g",{transform:"translate(12,0)"},a.createElement("path",{d:"M0,12A12,12 0 1,1 0,-12A12,12 0 1,1 0,12M0,6A6,6 0 1,0 0,-6A6,6 0 1,0 0,6Z",fill:"brown"})),a.createElement("g",{transform:"translate(12,20)"},a.createElement("path",{d:"M0,12A12,12 0 0,1 -12,0L-6,0A6,6 0 0,0 0,6Z",fill:"coral"})),a.createElement("g",{transform:"translate(3,55)"},a.createElement("path",{d:"M0,0L8.5,-8.5A12,12 0 0,1 12,0Z",fill:"coral"})),a.createElement("g",{transform:"translate(0,5)"},a.createElement("text",{x:"40",y:"0"},"循环队列"),a.createElement("text",{x:"40",y:"25"},"队列元素"),a.createElement("text",{x:"40",y:"50"},"取出队首"))))}})},70:function(n,e,t){var a=t(1),s=t(7),r=t(151),i=t(69);n.exports=a.createClass({displayName:"module.exports",getInitialState:function(){return{text:"",demo:"enque",help:!0}},componentDidMount:function(){r.init.bind(this)(),s.runDemo("init"),s.runDemo("enque",1),s.runDemo("enque",2,!1)},componentDidUpdate:function(n){this.props!==n&&void 0!==this.props.frame&&r.render(this.props.frame.status,this.props.delay,this.props.others)},render:function(){var n=[{button:{demo:"enque",onClick:this._onClick.bind(this,"enque"),value:"入队"},items:[{onChange:this._onChange,value:this.state.text,placeholder:"整数"}]},{button:{demo:"deque",onClick:this._onClick.bind(this,"deque"),value:"出队"}},{button:{demo:"front",onClick:this._onClick.bind(this,"front"),value:"队首"}},{button:{help:this.state.help,onClick:this._onHelp,value:"帮助"}}],e=this;return a.createElement("div",{className:"wrapper-code"},a.createElement("div",{className:"list"},n.map(function(n,t){var s="input-group"+(n.button.help||n.button.demo===e.state.demo?" input-current":""),r=n.items?n.items:[];return a.createElement("div",{key:t,className:s},a.createElement("input",{className:"input-button",readOnly:!0,onClick:n.button.onClick,value:n.button.value,title:n.button.value}),a.createElement("div",null,r.map(function(n,e){return a.createElement("input",{key:e,className:"input-item",onChange:n.onChange,value:n.value,title:n.value,placeholder:n.placeholder})})))})),a.createElement("div",{ref:"svg",className:"scene"}),a.createElement(i,{show:this.state.help}))},_onChange:function(n){this.setState({text:n.target.value})},_onClick:function(n){this.setState({demo:n}),s.runDemo(n,this.state.text)},_onHelp:function(){this.setState({help:!this.state.help})}})},107:function(n,e,t){n.exports="CC=gcc\nCFLAGS=-c -Wall\nLDFLAGS=\nSOURCES=test.c queue.c queue.h ../common/util.c ../common/util.h\nOBJECTS=$(SOURCES:.c=.o)\nEXECUTABLE=a.out\n\nall: $(SOURCES) $(EXECUTABLE)\n\n$(EXECUTABLE): $(OBJECTS)\n    $(CC) $(LDFLAGS) $(OBJECTS) -o $@\n\n.cpp.o:\n    $(CC) $(CFLAGS) $&lt; -o $@\n\nclean:\n    rm -rf *.o a.out"},108:function(n,e,t){n.exports='<span class="comment">#include &lt;stdio.h></span>\n<span class="comment">#include "./queue.h"</span>\n\nint main(int argc, char <span class="keyword">const</span> *argv[]) {\n  int cmd;\n  int a;\n  int *b;\n  queue *q = QueueCreate(<span class="number">10</span>, sizeof(int));\n  <span class="keyword">while</span> (scanf(<span class="string">"%d"</span>, &amp;cmd) != EOF) {\n    <span class="keyword">switch</span>(cmd) {\n      <span class="keyword">case</span> <span class="number">0</span>:\n        scanf(<span class="string">"%d\\n"</span>, &amp;a);\n        b = QueuePush(q, &amp;a);\n        <span class="keyword">if</span> (b == <span class="keyword">NULL</span>) {\n          printf(<span class="string">"push null\\n"</span>);\n        } <span class="keyword">else</span> {\n          printf(<span class="string">"push %d\\n"</span>, *b);\n        }\n        <span class="keyword">break</span>;\n      <span class="keyword">case</span> <span class="number">1</span>:\n        b = QueuePeak(q);\n        <span class="keyword">if</span> (b == <span class="keyword">NULL</span>) {\n          printf(<span class="string">"peak null\\n"</span>);\n        } <span class="keyword">else</span> {\n          printf(<span class="string">"peak %d\\n"</span>, *b);\n        }\n        <span class="keyword">break</span>;\n      <span class="keyword">case</span> <span class="number">2</span>:\n        b = QueuePop(q);\n        <span class="keyword">if</span> (b == <span class="keyword">NULL</span>) {\n          printf(<span class="string">"pop null\\n"</span>);\n        } <span class="keyword">else</span> {\n          printf(<span class="string">"pop %d\\n"</span>, *b);\n        }\n        <span class="keyword">break</span>;\n      <span class="keyword">default</span>:\n        <span class="keyword">break</span>;\n    }\n  }\n  QueueDestroy(q);\n  <span class="keyword">return</span> <span class="number">0</span>;\n};'},151:function(n,e,t){function a(n){return n=n||0,x.svg.arc().innerRadius(_+n).outerRadius(b+n)}function s(n){return E*n/k}function r(n,e){return void 0===e&&(e=n+1),{startAngle:s(n),endAngle:s(e)}}function i(n,e){return void 0===e&&(e=n+50),{innerRadius:n,outerRadius:e}}function o(){var n=[g.head,g.tail];h.selectAll("path.head").data(n).enter().append("path").attr("class","head"),h.selectAll("path.head").data(n).transition().duration(v).style("fill",function(n,e){return g.headtail?z:"tomato"}).attrTween("d",function(n,e){if(void 0===this.__prev__){var t=x.interpolate(i(e?150:100,150),i(e?100:50,150));return this.__prev__=r(n),function(e){return x.svg.arc().startAngle(s(n)).endAngle(s(n+1))(t(e))}}var t=x.interpolate(this.__prev__,r(n));return this.__prev__=r(n),function(n){return x.svg.arc().innerRadius(e?100:50).outerRadius(150)(t(n))}}),f.selectAll("text.head").data(n).enter().append("text").attr("class","head").attr("dy",5).attr("transform",w().translate(function(n,e){return x.svg.arc().innerRadius(e?150:100,150).outerRadius(e?200:150,150).centroid(r(n))})).text(function(n,e){return e?"队尾":"队首"}),f.selectAll("text.head").data(n).transition().duration(v).attr("transform",w().translate(function(n,e){return x.svg.arc().innerRadius(e?100:50,150).outerRadius(e?150:100,150).centroid(r(n,n+1))}))}function c(){var n=g.queue,e=function(n){return n.i};h.selectAll("path.item").data(n,e).enter().append("path").attr("class","item"),h.selectAll("path.item").data(n,e).style("opacity",1).transition().duration(v).attrTween("d",function(n,e){if(void 0===this.__prev__){var t=x.interpolate(i(200),i(150));return this.__prev__=r(g.head+1-1+e),function(n){return x.svg.arc().startAngle(s(g.head+1-1+e)).endAngle(s(g.head+1-1+e+1))(t(n))}}var t=x.interpolate(this.__prev__,r(g.head+1-1+e));return this.__prev__=r(g.head+1-1+e),function(n){return a()(t(n))}}),h.selectAll("path.item").data(n,e).exit().style("opacity",1).transition().duration(v).style("opacity",0).remove(),f.selectAll("text.item").data(n,e).enter().append("text").attr("class","item").attr("dy",5).text(function(n){return n.v}),f.selectAll("text.item").data(n,e).style("opacity",1).transition().duration(v).attrTween("transform",function(n,e){if(void 0===this.__prev__){var t=x.interpolate(w().translate(a(50).centroid(r(g.head+1-1+e)))(),w().translate(a().centroid(r(g.head+1-1+e)))());this.__prev__=g.head+1-1+e}else{var t=x.interpolate(w().translate(a().centroid(r(this.__prev__)))(),w().translate(a().centroid(r(g.head+1-1+e)))());this.__prev__=g.head+1-1+e}return function(n){return t(n)}}),f.selectAll("text.item").data(n,e).exit().style("opacity",1).transition().duration(v).style("opacity",0).remove()}function l(){h.selectAll("path.toque").data(g.toque).enter().append("path").attr("class","toque"),h.selectAll("path.toque").data(g.toque).style("opacity",1).transition().duration(v).attrTween("d",function(n,e){if(void 0===this.__prev__){var t=x.interpolate(i(250),i(200));return this.__prev__=r(g.tail),function(n){return x.svg.arc().startAngle(s(g.tail)).endAngle(s(g.tail+1))(t(n))}}var t=x.interpolate(this.__prev__,r(g.tail));return this.__prev__=r(g.tail),function(n){return x.svg.arc().innerRadius(200).outerRadius(250)(t(n))}}),h.selectAll("path.toque").data(g.toque).exit().style("opacity",1).transition().duration(v).style("opacity",0).remove(),f.selectAll("text.toque").data(g.toque).enter().append("text").attr("class","toque").attr("dy",5).text(function(n){return n}),f.selectAll("text.toque").data(g.toque).style("opacity",1).transition().duration(v).attrTween("transform",function(n,e){if(void 0===this.__prev__){var t=x.interpolate(w().translate(x.svg.arc().innerRadius(250).outerRadius(300).centroid(r(g.tail)))(),w().translate(x.svg.arc().innerRadius(200).outerRadius(250).centroid(r(g.tail)))());this.__prev__=g.tail}else{var t=x.interpolate(w().translate(a(50).centroid(r(this.__prev__)))(),w().translate(a(50).centroid(r(g.tail)))());this.__prev__=g.tail}return function(n){return t(n)}}),f.selectAll("text.toque").data(g.toque).exit().style("opacity",1).transition().duration(v).style("opacity",0).remove()}function p(){h.selectAll("path.tofront").data(g.tofront).enter().append("path").attr("class","tofront"),h.selectAll("path.tofront").data(g.tofront).style("opacity",1).transition().duration(v).attrTween("d",function(n,e){if(void 0===this.__prev__){var t=x.interpolate(i(150),i(0));return this.__prev__=r(g.head),function(n){return x.svg.arc().startAngle(s(g.head)).endAngle(s(g.head+1))(t(n))}}var t=x.interpolate(this.__prev__,r(g.head));return this.__prev__=r(g.head),function(n){return x.svg.arc().innerRadius(0).outerRadius(50)(t(n))}}),h.selectAll("path.tofront").data(g.tofront).exit().style("opacity",1).transition().duration(v).style("opacity",0).remove(),f.selectAll("text.tofront").data(g.tofront).enter().append("text").attr("class","tofront").attr("dy",5).text(function(n){return n}),f.selectAll("text.tofront").data(g.tofront).style("opacity",1).transition().duration(v).attrTween("transform",function(n,e){if(void 0===this.__prev__){var t=x.interpolate(w().translate(x.svg.arc().innerRadius(150).outerRadius(200).centroid(r(g.head)))(),w().translate(x.svg.arc().innerRadius(0).outerRadius(50).centroid(r(g.head)))());this.__prev__=g.head}else{var t=x.interpolate(w().translate(a(-150).centroid(r(this.__prev__)))(),w().translate(a(-150).centroid(r(g.head)))());this.__prev__=g.head}return function(n){return t(n)}}),f.selectAll("text.tofront").data(g.tofront).exit().style("opacity",1).transition().duration(v).style("opacity",0).remove()}function u(n,e){g=n,v=e}function d(n,e){u(n,e),o(),c(),l(),p()}function m(){k=8;var n=this,e=x.behavior.zoom().scaleExtent([.1,10]).on("zoom",function(){n.svg.attr("transform",w().translate(x.event.translate).scale(x.event.scale))});this.svg=x.select(this.refs.svg.getDOMNode()).append("svg").call(e).append("g"),this.g=this.svg.append("g").attr("transform",w().translate(300,250).scale(1)),this.gbase=this.g.append("g").attr("class","base"),this.ghigh=this.g.append("g").attr("class","high"),this.gtext=this.g.append("g").attr("class","text"),this.gbase.append("path").attr("class","queue"),this.gbase.select("path.queue").transition().duration(this.props.delay/3).attrTween("d",function(n){var e=x.interpolate(r(0,0),r(0,k));return function(n){return a()(e(n))}}),h=this.gbase,f=this.gtext,y=this.ghigh}var h,f,y,g,v,g,v,k,x=t(4),w=t(9),_=150,b=200,E=2*Math.PI,z="deepskyblue";n.exports={init:m,render:d}}});